<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd  
      http://www.springframework.org/schema/aop 
	  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    
    <!-- 加载配置属性文件 -->
    <context:property-placeholder
            ignore-unresolvable="true"
            location="classpath:loris.properties,classpath:upload.properties"/>
    <!-- 注解扫描的包 -->
    <!-- 开启controller注解支持 -->
    <context:component-scan base-package="com.supermarket.yun.platform.slowloris.controller"
                            use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    
    <!-- 配置使Spring采用CGLIB代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>
    <!-- 静态资源映射 -->
    <mvc:resources location="/WEB-INF/static/" mapping="/static/**"/>
    <mvc:resources location="/upload/" mapping="/upload/**"/>
    
    
    <bean class="com.supermarket.yun.platform.slowloris.common.utils.SpringContextHolder"/>
    
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.supermarket.yun.platform.slowloris.common.query.resolver.QueryMethodArgumentResolver"/>
            <bean class="com.supermarket.yun.platform.slowloris.common.query.resolver.PageableMethodArgumentResolver"/>
            <bean class="com.supermarket.yun.platform.slowloris.common.query.resolver.FormModelMethodArgumentResolver"/>
            <bean class="com.supermarket.yun.platform.slowloris.common.query.resolver.PropertyPreFilterMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
    
    <!-- 视图解释类 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/webpage/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    
    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <!-- 日志拦截器 -->
        <bean class="com.supermarket.yun.platform.slowloris.interceptor.LogInterceptor">
            <property name="openAccessLog" value="${openAccessLog}"/>
        </bean>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!-- 需排除拦截的地址 -->
            <mvc:exclude-mapping path="/static/**"/>
            <!-- 需排除拦截的地址 -->
            <mvc:exclude-mapping path="/upload/**"/>
            
            <bean class="com.supermarket.yun.platform.slowloris.interceptor.EncodingInterceptor"/>
        </mvc:interceptor>
        <!-- 安全验证拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!-- 需排除拦截的地址 -->
            <mvc:exclude-mapping path="/static/**"/>
            <!-- 需排除拦截的地址 -->
            <mvc:exclude-mapping path="/upload/**"/>
            
            <bean class="com.supermarket.yun.platform.slowloris.interceptor.PermissionInterceptorAdapter"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
    
    <!--异常处理-->
    <bean class="com.supermarket.yun.platform.slowloris.handler.DefaultExceptionHandler"/>
    
    <!-- 国际化 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <!-- 国际化信息所在的文件名 -->
        <property name="basename" value="i18n/messages"/>
        <!--多个目录的时候配置 -->
        <property name="basenames">
            <list>
                <value>i18n/messages</value>
                <value>i18n/ValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
    
    <!-- 支持上传文件 -->
    <!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8" p:maxUploadSize="5400000" p:uploadTempDir="${upload.base.dir}/temp"/>
    
    <!-- 以下 validator  http://blog.csdn.net/xiaojiesu/article/details/50555714 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
    
    
    <!-- 计划任务后台管理 -->
    <bean id="schedulerFactoryBean"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean"/>
    <!-- 计划任务启动监听器 -->
    
    
    <!-- HTML 组建加载器 -->
    <bean id="defaultHtmlComponentBuilder"
          class="com.supermarket.yun.platform.slowloris.controller.tags.html.builder.DefaultHtmlComponentBuilder">
        <property name="fileNames">
            <!--这里我们指定要加载某个文件夹下所有以-dynamic.xml结尾的文件 -->
            <list>
                <value>classpath*:/tags/*-html-component.xml</value>
            </list>
        </property>
    </bean>
    <!-- html组建管理器加载器 -->
    <bean class="com.supermarket.yun.platform.slowloris.controller.tags.html.manager.HtmlComponentManager">
        <property name="dynamicStatementBuilder" ref="defaultHtmlComponentBuilder"/>
    </bean>
    <bean class="com.supermarket.yun.platform.slowloris.controller.tags.html.listener.HtmlComponentInitListener"/>
    
    
    <import resource="spring-mvc-shiro.xml"/>

</beans>